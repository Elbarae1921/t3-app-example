import type { NextPage } from "next";
import Head from "next/head";
import { withAuth } from "../HOCs/withAuth";
import { AuthProps } from "../types/AuthProps";
import { trpc } from "../utils/trpc";

interface Props extends AuthProps {};

const Home = ({ user }: Props) => {

  const trpcContext = trpc.useContext();

  const { data, isLoading } = trpc.useQuery([
    "example.hello",
    { text: "World!" },
  ]);

  const { data: todo } = trpc.useQuery([
    'example.getTodo',
    { id: 1, name: 'test' },
  ]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <button
          onClick={() => {
            localStorage.removeItem('token');
            trpcContext.invalidateQueries(['auth.me']);
          }}
        >
          Logout
        </button>
        <h1>
          Create <span>T3</span> App
        </h1>

        <div>
          <h3>This stack uses:</h3>
          <ul>
            <li>
              <a href="https://nextjs.org" target="_blank" rel="noreferrer">
                Next.js
              </a>
            </li>
            <li>
              <a href="https://trpc.io" target="_blank" rel="noreferrer">
                tRPC
              </a>
            </li>
            <li>
              <a
                href="https://typescriptlang.org"
                target="_blank"
                rel="noreferrer"
              >
                TypeScript
              </a>
            </li>
          </ul>

          <div>{data ? <p>{data.greeting}</p> : <p>Loading..</p>}</div>
        </div>
      </div>
    </>
  );
};

export default withAuth(Home);
